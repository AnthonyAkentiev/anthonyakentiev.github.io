<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[C++/Python Jehad Fan Club]]></title>
  <link href="http://AnthonyAkentiev.github.io/atom.xml" rel="self"/>
  <link href="http://AnthonyAkentiev.github.io/"/>
  <updated>2014-04-28T00:44:34+04:00</updated>
  <id>http://AnthonyAkentiev.github.io/</id>
  <author>
    <name><![CDATA[Anton Akentiev]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[ScrumTrek Architecture Course]]></title>
    <link href="http://AnthonyAkentiev.github.io/blog/2014/04/27/scrumtrek-architecture-course/"/>
    <updated>2014-04-27T23:35:00+04:00</updated>
    <id>http://AnthonyAkentiev.github.io/blog/2014/04/27/scrumtrek-architecture-course</id>
    <content type="html"><![CDATA[<p>I have finished awesome 5-day <a href="http://scrumtrek.ru/trainings/view/27/">course</a>! And now i am &lsquo;SCRUM Professional: Architect&rsquo; ))</p>

<p>The course was very interesting. We worked hard each 5 * 8 * 60 * 60 second.
I think that It&rsquo;s equal to approx. 2-3 years of self studying.</p>

<p><img src="http://anthonyakentiev.github.io/images/scrum1.jpg"></p>

<p>Course started right from the Business Models. At the end we&rsquo;ve learned how to make proper desicions that can all be mapped diretly to business needs. I highly recommend this course to TECHNICAL people. Less patterns, less code. More thoughts, more business, more new technologies. No ads or marketing bullshit.</p>

<h1>RESOURCES to get</h1>

<p>All recorded mp3 are available here (in Russian):</p>

<p>All SPY photoshots available here:</p>

<p><img src="https://s3-eu-west-1.amazonaws.com/anthony.akentiev/scrum_trek/1.jpg"></p>

<p><img src="https://s3-eu-west-1.amazonaws.com/anthony.akentiev/scrum_trek/2.jpg"></p>

<p><img src="https://s3-eu-west-1.amazonaws.com/anthony.akentiev/scrum_trek/3.jpg"></p>

<p><img src="https://s3-eu-west-1.amazonaws.com/anthony.akentiev/scrum_trek/4.jpg"></p>

<p><img src="https://s3-eu-west-1.amazonaws.com/anthony.akentiev/scrum_trek/5.jpg"></p>

<p><img src="https://s3-eu-west-1.amazonaws.com/anthony.akentiev/scrum_trek/6.jpg"></p>

<p><img src="https://s3-eu-west-1.amazonaws.com/anthony.akentiev/scrum_trek/7.jpg"></p>

<p><img src="https://s3-eu-west-1.amazonaws.com/anthony.akentiev/scrum_trek/8.jpg"></p>

<p><img src="https://s3-eu-west-1.amazonaws.com/anthony.akentiev/scrum_trek/9.jpg"></p>

<p><img src="https://s3-eu-west-1.amazonaws.com/anthony.akentiev/scrum_trek/10.jpg"></p>

<p><img src="https://s3-eu-west-1.amazonaws.com/anthony.akentiev/scrum_trek/11.jpg"></p>

<p><img src="https://s3-eu-west-1.amazonaws.com/anthony.akentiev/scrum_trek/12.jpg"></p>

<p><img src="https://s3-eu-west-1.amazonaws.com/anthony.akentiev/scrum_trek/13.jpg"></p>

<p><img src="https://s3-eu-west-1.amazonaws.com/anthony.akentiev/scrum_trek/1.jpg"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[What technologies and services i'm currently using]]></title>
    <link href="http://AnthonyAkentiev.github.io/blog/2014/04/17/what-technologies-and-services-im-currently-using/"/>
    <updated>2014-04-17T01:14:00+04:00</updated>
    <id>http://AnthonyAkentiev.github.io/blog/2014/04/17/what-technologies-and-services-im-currently-using</id>
    <content type="html"><![CDATA[<p>First thing people ask when you tell them about your project is &ldquo;what technology STACK do you use?&rdquo;.
Let me begin:</p>

<h1>Stack</h1>

<p>Stack that i am currently using is called <a href="http://www.mean.io">&ldquo;MEAN&rdquo;</a>
(MongoDB + Express + AngularJS + NodeJS) for short.
Actually, I use different DataBases for different things:</p>

<p>For example &ndash; i use <strong>Redis</strong> as a quick key-value store and <strong>Memcache</strong> as a cache.</p>

<h2>Backend</h2>

<p>As i sayed before &ndash; i use NodeJS with <strong>npm</strong> as a default package manager.
I use <strong>Express</strong> for routing and processing, <strong>Cluster</strong> for load-balancing, <strong>Winston</strong> for logging, <strong>Mocha</strong> for tests, <strong>Nconf</strong> for configuration.</p>

<h2>Frontend</h2>

<p>I use Yo for templates, Bower/NPM as package managers, Grunt as a &ldquo;task runner&rdquo;.
To build my web-site for debugging i just type:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'> grunt server
</span></code></pre></td></tr></table></div></figure>


<p>This starts web server on localhost to connect to.</p>

<p>To build non-optimized version i just type:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'> grunt build
</span></code></pre></td></tr></table></div></figure>


<p>To build optimized version i type:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'> grunt release
</span></code></pre></td></tr></table></div></figure>


<p>This command does:
less, cssmin, concat, ngmin, uglify, htmlmin, imagemin&hellip;</p>

<h1>Online Services</h1>

<p>Services i use are:
Amazon: EC2, CloudFront, S3, Route53.</p>

<p>Very cool service i use for online monitoring and performance tuning is <a href="http://newrelic.com/">NewRelic</a>.
They e-mail me each time my server is &ldquo;too busy&rdquo; or down ))
I will soon write an article about that. It is worth that.</p>

<p><img src="http://anthonyakentiev.github.io/images/availability.png"></p>

<p><img src="http://anthonyakentiev.github.io/images/perf.png"></p>

<p>I highly recommend <a href="browserstack.com">browserstack</a> service to get screenshots of your site from different machines/browsers automatically.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Google and China]]></title>
    <link href="http://AnthonyAkentiev.github.io/blog/2014/03/10/google-and-china/"/>
    <updated>2014-03-10T23:53:00+04:00</updated>
    <id>http://AnthonyAkentiev.github.io/blog/2014/03/10/google-and-china</id>
    <content type="html"><![CDATA[<p>The news is good today: i&rsquo;ve finished &ldquo;In The Plex: How Google Thinks, Works, and Shapes Our Lives&rdquo; book.</p>

<p><img src="http://upload.wikimedia.org/wikipedia/en/9/95/In_the_Plex_Levy_2011.jpg" alt="" /></p>

<h1>Brief</h1>

<p>I really liked this book, even though it is not as interesting as <a href="http://anthonyakentiev.github.io/blog/2013/12/23/the-thriller">this one</a>, but it gives you a quick glimpse of what big-business in America is.</p>

<p>What really inspired me &ndash; is that this book shows you &ndash; how you can redefine your future. You <strong>can</strong> build product(s) that will change people&rsquo;s lives.
When you read books aboud Apple and Steve Jobs &ndash; you think that their success is some kind of &lsquo;magic&rsquo;, but the book about Google clearly declares that technology must be in the first place. No marketing or PR bull-shit. Ever.</p>

<p>Here is the <a href="http://www.amazon.com/Plex-Google-Thinks-Works-Shapes-ebook/dp/B003UYUP6M">link</a> to Amazon Store. The book is really big. It took me about 2 or 3 weeks to complete. There are many interesting things about Google in different periods. What i&rsquo;m going to &ldquo;review&rdquo; is a single chapter &ndash; Google invasion to China.</p>

<p>There were many struggles with China, and it seems that many projects (even Android and Google Wave) were easier to implement than to open chineese office )). More on that in &lsquo;quotes section&rsquo;.</p>

<h1>Quotes about China</h1>

<p>1) Most Chinese don&rsquo;t speak English. They will never use Google.</p>

<p>2) Google needs to be more close to Chinese people.</p>

<p>3) One woman seemed surprised that she&rsquo;s even be asked what search engine she uses. &ldquo;Baidu.&rdquo; Why? &ldquo;Because it is the product of Chinese people who naturally know more about China than Google&rdquo;, she said.</p>

<p>4) But by then, many Chinese had written off Google as an unwelcome outsider with less reliable service.</p>

<p>5) Baidu had succeeded in transforming the competition into a test of patriotism.</p>

<p>6) Other offices think they are Google. The Beijing office thinks it&rsquo;s Google China.</p>

<p>7) We&rsquo;d get these edicts from the Ministry of Information every day, and i had to sit there.</p>

<p>8) Your title is Product Manager&hellip; They objected that in China no one knew what that meant, and they preferred the official appellation of &ldquo;special assistant to Kai-Fu Lee&rdquo; ))</p>

<p>9) Kai-Fu Lee celebrity status had a downside. He became as much a part of the rumor mill as the celebrity female pop singers who dominated bulletin board discussions. Every time Google had a setback, word would appear that his departure was imminent ))</p>

<p>10) An exact transliteration of Google was out of question: it sounded too much like Gou-Gou, which meant &ldquo;dog-dog&rdquo; ))</p>

<p>11) Google angered the local press by not paying them &ldquo;red pockets&rdquo; (expense money that exceeded cab fare)</p>

<p>12) Often manager of Internet-cafes would take money to replace one search engine with another. Google generally avoided such arrangements. But the company sometimes used representatives who weren&rsquo;t as finicky and looked the other way.</p>

<p>13) It was as if the government was sending Google a message: you can be in our market, but you must not be the leader.</p>

<p>14) Wang explained that such acts are not uncommon in China, where there&rsquo;s a &ldquo;more fluid&rdquo; view of plagiarism.</p>

<p>15) It&rsquo;s not that i don&rsquo;t trust Chinese engineers, it&rsquo;s the same engineers as here, who went to the same schools, but when you go to a place like China, there&rsquo;s lots of examples of companies where intellectual property has gone out that door.</p>

<p>16) The officials were not impressed. &ldquo;This is the antiporn year,&rdquo; they said. &ldquo;You&rsquo;ve been warned twice before, and this is the third time. So we are going to punish you.&rdquo;</p>

<p><strong>Stay tuned!</strong></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[To ZigZag or not to ZigZag]]></title>
    <link href="http://AnthonyAkentiev.github.io/blog/2014/02/24/to-zigzag-or-not-to-zigzag/"/>
    <updated>2014-02-24T22:56:00+04:00</updated>
    <id>http://AnthonyAkentiev.github.io/blog/2014/02/24/to-zigzag-or-not-to-zigzag</id>
    <content type="html"><![CDATA[<p>I am not really into this book, but it has one though that i liked: &ldquo;First step in any business is getting profitability&rdquo;. Of course, there are a lot of business that are exceptions to this statement. You can easily recall YouTube and Twitter for example.</p>

<p><img src="http://www.zigzagprinciple.com/wp-content/themes/xmuz/images/book-home.png" alt="" /></p>

<p>So that was Zig#1.</p>

<p>Zig#2 is &ldquo;Once you are profitable &ndash; add additional resources&rdquo;.</p>

<p>Zig#3 is &ldquo;Scale your business&rdquo;. Don&rsquo;t keep baking bread, spread the technology, so you will control many bakeries.</p>

<p>Author starts  with little story of &ldquo;zigzagging through obstacles instead of going downhill straight to your goal&rdquo;. But  i still wonder why these <strong>straightforward</strong> steps are called <strong>ZigZags</strong> ))</p>

<p>Here is the <a href="http://www.zigzagprinciple.com">link</a>. Every book has own domain/site today?</p>

<h1>Quotes:</h1>

<p>&ldquo;What skills do i have that can get me to profitability the fastest?&rdquo;</p>

<p>&ldquo;First step in building foundation is assesing your resources&rdquo;</p>

<p>&ldquo;During this first Zig, it is important to remember that you are not going to have time to be perfect at everything. Many people that are perfectionsts or have a methodological personality fail at this stage because they try to be great and
have everything perfect and buttoned up…&rdquo;</p>

<p>&ldquo;We worked fast and we worked hard, which meant we didn&rsquo;t always refine our effort to the point of perfection. In fact, in many cases we settled for <strong>good enough</strong>&rdquo;</p>

<p>&ldquo;A key reason many people have hard time adding a resource is they have become accustomed to micromanaging every aspect of their business&rdquo;</p>

<p>&ldquo;Mental Capital (our knowledge, skills, talents, passions) + Raltionship Capital (quality of our relationships with a broad pool of people) = Financial Capital&rdquo;</p>

<p>&ldquo;Most people spend 80% of their time worrying about things they can not control. In other words, they spend all of their time and energy focusing on their areas of concern rather than their area of influence&rdquo;</p>

<p>&ldquo;Entrepreneurship is having the courage to wander in the fog&rdquo;</p>

<p>&ldquo;A goal needs to be: (1)written down, (2)measurable, (3)realistic&rdquo;</p>

<p>&ldquo;Resist change and die, adapt to change and survive, create change and thrive&rdquo;</p>

<h1>Conclusion</h1>

<p>Don&rsquo;t buy <em>&ldquo;Become Next Steve Jobs in 30 minutes&rdquo;</em>-style books.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Registry: from the dark past]]></title>
    <link href="http://AnthonyAkentiev.github.io/blog/2014/02/02/registry-from-the-dark-past/"/>
    <updated>2014-02-02T22:10:00+04:00</updated>
    <id>http://AnthonyAkentiev.github.io/blog/2014/02/02/registry-from-the-dark-past</id>
    <content type="html"><![CDATA[<p>That is my thoughts circa 2006-2008. Time has proven that <strong>simple</strong> and <strong>robust</strong> Unix way won.
Today almost nobody uses Windows Registry for keeping internal data.
How come that good intention led to bad results?</p>

<p><img src="http://imagewz.winzip.com/static/images/ss-reg-opt-2.png"></p>

<h1>Why Registry failed?</h1>

<p>Main reasons are:</p>

<ul>
<li>Lack of robustness.</li>
<li>Registry is difficult to use.</li>
<li>Registry is not a something you can&rsquo;t live without.</li>
</ul>


<h1>Long answer</h1>

<p>1) Registry has 40+ functions (3-7 parameters) to deal with. You have to memorize some of them + understand how they work. Hey, have you ever used <em>RegUnLoadKey</em>, <em>RegQueryMultipleValues</em> or <em>RegConnectRegistry</em> functions?</p>

<p>2) Registry has Keys and Values (with some awkward data types built in).
&ndash; In unix: key is a path (&ldquo;folder&rdquo;) and value is the data inside.</p>

<p>3) Registry has some weird predefined &ldquo;folders&rdquo; like HKLM/HKCU.</p>

<p>4) Registry has Links for that mounts. For example:  HKEY_CLASSES_ROOT is linked to HKEY_LOCAL_MACHINE\Software\Classes.</p>

<p>5) Registry uses some obscure mechanisms: Redirection + Reflection + Virtualization ))) Oh crap!
How it works:</p>

<ul>
<li>Redirection: write from 32-bit app, and data will be redirected to WOW6432Node. This helped to separate 32/64 bit apps automatically.</li>
<li>Reflection: write to 64-bit key and data will be propagated to WOW6432Node automatically. This helps to register OLE/COM classes only once, for example. Then Microsoft turned that off.</li>
<li>Virtualization: if old app writes to &lsquo;bad&rsquo; location (that is now read-only) &ndash;> it will be redirected to good one.</li>
</ul>


<p>6) We have no special software to work with Registry. Try to change permissions on multiple keys for example&hellip;You can&rsquo;t get statistics, perform optimizations (defragmentation?), move, unmount, repair, clean, bulk: rename, etc.</p>

<p>7) Registry is a &lsquo;single point of failure&rsquo;.</p>

<blockquote><p>Critics labeled the Registry in Windows 95 a single point of failure, because re-installation of the operating system was required if the Registry became corrupted.However, Windows NT and later versions use transaction logs to protect against corruption during updates. Current versions of Windows use two levels of log files to ensure integrity even in the case of power failure or similar catastrophic events during database updates</p></blockquote>

<p>8) Registry is monolithic. You have to move (or backup) data from Registry &ldquo;all at once&rdquo;. Even though Registry can contain many hives, there is still no good granularity.</p>

<h1>Conclusion</h1>

<p>Registry rot started with &lsquo;Registry-free COM&rsquo; configurations and manifest files. Even Microsoft was about to stop its registry usage.
And then dozens of Cross-Platform applications that never used Registry to store settings (colors, preferences, etc) emerged. They all use filesystem because libraries are trying to make behaviour as equal as possible on different platforms.</p>

<p>The good thing is that you are not forced to use Registry. So don&rsquo;t do that.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[On WindowsPhone8]]></title>
    <link href="http://AnthonyAkentiev.github.io/blog/2014/01/18/on-windowsphone8/"/>
    <updated>2014-01-18T22:47:00+04:00</updated>
    <id>http://AnthonyAkentiev.github.io/blog/2014/01/18/on-windowsphone8</id>
    <content type="html"><![CDATA[<p>Some say that WP8 &ldquo;rocks&rdquo;, MS will &ldquo;strike back&rdquo;, Nokia is a great company and so on&hellip; Unfortunately, while Microsoft tries hard to find new CEO &ndash;> it seems like nobody wants to write for WP8 platform.</p>

<h2>But(t) Why?</h2>

<p>Not because WP8 is good (or bad).
Not because WP8 has clear (or messy) interface.
Not because WP8 is Microsoft.</p>

<p>There is only one reason why i&rsquo;m not going to make some Windows Phone 8 applications in the near future: WP8 market share is too small. <strong>Imagine writing Desktop Application for Linux )) You will get nearly the same market share</strong></p>

<p>When starting to build app today i&rsquo;d rather consider this order:</p>

<pre><code> * Android. Yes! the paradigm is shifted, market tells us - first implement app for Android!
 * iOS
 * ... ooohhh, i need some rest
 * ... maybe we will do some WP8 research?
 * ... hey, MS gives all tools for free!
 * ... ok,ok. Some folks won their free Nokias and need WP8 app. I understand
 * WP8
</code></pre>

<p>Today i&rsquo;m going to start a list of Applications that are not available on WindowsPhone8 platform, but i NEED them. That is a real case scenario of mine, no fooling. Yes, the most basic apps are already in Windows Market, and some are not official. I will update this post, so new items will appear and some may become outdated.</p>

<h2>Let&rsquo;s start</h2>

<ol>
<li>airbnb.com</li>
<li>snapchat.com</li>
<li>gamecenter.nhl.com &ndash; &lsquo;National Hockey League&rsquo; streaming video app.</li>
<li>ozon.ru &ndash; One of the biggest russian online retailers.</li>
<li>sports.ru &ndash; One of the biggest russian online sports magazines. You can see Android + iPhone icons on their site. No WP8.</li>
<li>ska.ru &ndash; Russian hockey club.</li>
<li>feedly.com &ndash; Famous RSS reader (no official client, only 3rd party).</li>
<li>music.yandex.ru &ndash; Russian Pandora/Last.Fm clone ))</li>
<li>mobile.github.com &ndash; Oh, shhhhittt&hellip;</li>
<li>khlmobile.com &ndash; Again, Russian &lsquo;National Hockey League&rsquo; clone.</li>
<li>motocitizen.ru &ndash; Social network with no WP8 support! Ahahahah.</li>
<li>lenta.ru &ndash; No official client</li>
<li>URGENT! Dakar 2014 has only Android/iPhone clients!</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Feeding the monster]]></title>
    <link href="http://AnthonyAkentiev.github.io/blog/2014/01/02/feeding-the-monster/"/>
    <updated>2014-01-02T17:14:00+04:00</updated>
    <id>http://AnthonyAkentiev.github.io/blog/2014/01/02/feeding-the-monster</id>
    <content type="html"><![CDATA[<p>Book &ldquo;Trust Me, I&rsquo;m Lying: Confessions of a Media Manipulator&rdquo; is written by Ryan Holiday, a young man in his late twenties who was a Director of Marketing of Ammerican Apparel. He has increased the sales from 40 to 60 millions dollars. Here is the <a href="http://www.amazon.com/Trust-Me-Lying-Confessions-Manipulator-ebook/dp/B0074VTHH0">link</a>.</p>

<p><img src="http://i.bnet.com/blogs/apparel-socks.jpg" alt="" /></p>

<p>If you don&rsquo;t know who Lauren Phoenix is &ndash;> go see some porn (and she is one of the cutest girls in this business, trust me, i&rsquo;m not lying)). Simply type in &lsquo;Lauren Phoenix&rsquo; in your Google image search &ndash; i bet you will see American Apparel first)) They also featured Sasha Grey in their ads to make a real controversy and more pageviews.</p>

<p>I&rsquo;d give this book 3 out of 5 stars. It is bit boring and i wonder if all that hype around this book is simply PR-manipulation (what this book&rsquo;s all about). Even though this book does not entertain much &ndash; it has many interesting examples of what &lsquo;marketing&rsquo; does today to our lives. In first part of the book author explains why media is working like that and what is their goal today.</p>

<p>Later author tells us why sources of pageviews are shifted from reliable (almost) agencies/newspapers to Twitter and Facebook. And why manipulations could be so easily done &ndash; nobody has time to verify the source.</p>

<p>He also states that RSS is already dead (book was published in 2012). That was a good foresight.</p>

<p>Ryan says that one day he understood that &ldquo;when manipulation is done &ndash; one wins, everybody looses&rdquo;. And he calls this manipulative behaviour &ldquo;Feeding the monster&rdquo;. He used to &ldquo;leak documents&rdquo;, orchestrated fake tweets and comments, painted some vulgar pharases over bilboards&hellip; If you want to understand how blogging/marketing/news work nowadays &ndash; read this book.</p>

<h1>Ready for quotes?</h1>

<p>&ldquo;Each one hopes that if he feeds the crocodile enough, the crocodile will eat him last&rdquo;</p>

<p>&ldquo;Roughly half reported using Twitter to find and search stories&rdquo;</p>

<p>&ldquo;Remember: every person in this ecosystem is under immense pressure to produce content under the tightest deadlines&rdquo;</p>

<p>&ldquo;…was once asked what he looked for when he hired writers for his blog. His answer was one word: quickness&rdquo;</p>

<p>&ldquo;Millions of dollard are exhanged for essentially worthless assets&rdquo;</p>

<p>&ldquo;Most important, they&rsquo;re at the mercy of Wikipedia, because that is where they do their research&rdquo;</p>

<p>&ldquo;If it doesn&rsquo;t spread &ndash; it&rsquo;s dead&rdquo;</p>

<p>&ldquo;No marketer is ever going to push something with the stink of reasonableness, complexity or mixed emotions&rdquo;</p>

<p>&ldquo;I have my own analysis: when you take away the question mark [from the title] it usually turns their headline into a lie&rdquo;</p>

<p>&ldquo;It meant the decline of the editorial. These papers relied on gossip&rdquo;</p>

<p>&ldquo;The Washington Post accidentally published a headline to an article about weather: SEO Headline&rdquo; ))</p>

<p>&ldquo;Publishers wish people liked better stuff&rdquo;</p>

<p>&ldquo;80% of blog posts contain fewer that 500 words&rdquo; &ndash; 800 words is the key number for blog post length</p>

<p>&ldquo;When you hear a friend say in conversation &lsquo;I was reading something…&rsquo; know that today the sad fact is that they probably just glanced at something on a blog&rdquo;</p>

<p>&ldquo;<em>May</em> becomes <em>Is</em> becomes <em>Has</em>&rdquo;</p>

<p>&ldquo;The common wisdom is that the site has [only] one second to make the hook&rdquo;</p>

<p>&ldquo;The world is boring, but the news is exciting&rdquo;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The Thriller]]></title>
    <link href="http://AnthonyAkentiev.github.io/blog/2013/12/23/the-thriller/"/>
    <updated>2013-12-23T23:41:00+04:00</updated>
    <id>http://AnthonyAkentiev.github.io/blog/2013/12/23/the-thriller</id>
    <content type="html"><![CDATA[<p>Book &ldquo;Hatching Twitter: A True Story of Money, Power, Friendship, and Betrayal&rdquo; is written by Nick Bilton. Here is the <a href="http://www.amazon.com/Hatching-Twitter-Story-Friendship-Betrayal/dp/1591846013">link</a>. It was released about two month ago.</p>

<p><img src="http://www.nickbilton.com/wp-content/uploads/2013/07/HatchingTwitter.jpg" alt="" /></p>

<p>This is very engaging and entertaining book. I would rather call it &ldquo;Soap Twitter&rdquo; or &ldquo;Behind-the-scenes of Twitter&rdquo;. It is fast-paced and easy to read. This book is not about technology, but about people.</p>

<p>I was really surprised that Twitter was such a complete mess.</p>

<h3>Here are the quotes</h3>

<p><em>Person One:</em></p>

<p>&ldquo;I never considered you a founder&rdquo;</p>

<p>&ldquo;What the fuck are you talking about? This is how VCs fuck up companies&rdquo;</p>

<p>&ldquo;The board wants you to step up to the chairman role&rdquo;</p>

<p>&ldquo;As far as he knew, he was &lsquo;doing a great fucking job!&rsquo;&rdquo;</p>

<p>&ldquo;I really have no fucking idea who to believe anymore&rdquo;</p>

<p>&ldquo;What the fuck! So you&rsquo;re going behind his back to be CEO of the company! I can&rsquo;t believe it &hellip;&rdquo;</p>

<p><em>Person Two:</em></p>

<p>&ldquo;He no longer looked like a himself: he began acting like the second coming of Steve Jobs&rdquo;</p>

<p>&ldquo;What is the worst thing i can do as CEO to fuck the company up?&rdquo; &ndash;&ldquo;Hire your fucking friends!&rdquo;</p>

<p>&ldquo;He had watched in disbelief as he realized he&rsquo;d been completely erased from the Twitter history&rdquo;</p>

<p>&ldquo;You&rsquo;re giving me more than i deserve?&rdquo;</p>

<p>&ldquo;If you&rsquo;ll fire him, i&rsquo;ll quit&rdquo;</p>

<p>&ldquo;You leave the office to early. You go off to you dressmaking classes&rdquo;</p>

<p>&ldquo;He was acting like a cowboy&rdquo;</p>

<p><em>Person Three:</em></p>

<p>&ldquo;He is trying to push me out of company. I can feel it&rdquo;</p>

<p>&ldquo;Just a few blocks away, he wandered alone in the rain as his former friends and cofounders toasted to the award they had just won without him&rdquo;</p>

<p>&ldquo;A crimson stream of blood flowed down his cheek, past the drunken grin on his face&rdquo;</p>

<p><em>About Twitter:</em></p>

<p>&ldquo;If database goes down right now, we would lose everything&hellip;&rdquo;</p>

<p>&ldquo;This is fucking war! This is out enemy. We need a war map. They&rsquo;re going to attack us&rdquo;</p>

<p>&ldquo;We should go off and start our own Twitter&rdquo;</p>

<p>&ldquo;I&rsquo;m not working for your fucking dot-coms&rdquo;</p>

<p>&ldquo;I really appreciate our friendship and don&rsquo;t want me investing, or us working together, to affect it&hellip;&rdquo;</p>

<p>&ldquo;Blogger wasn&rsquo;t a traditional startup. It didn&rsquo;t have a pool table, a fridge full of beer&hellip;&rdquo;</p>

<p>&ldquo;More vodka, more Red Bull, the digital music sounding like a tempo for each drink&rdquo;</p>

<p>&ldquo;Well! Well! How about you fucking be uncomfortable in reference to the entire fucking career of this guy? How about you be fucking uncomfortable?&rdquo;</p>

<p>&ldquo;He had cried hundreds of times over the years, cried a million tears. He had cried alone. In his bed&rdquo;</p>

<h3>Conslusion</h3>

<p>The book is 5/5. I highly recommend this reading. It is rated 4,5/5 on Amazon. So you can believe me. It is well written and i really enjoyed it.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The Launch Pad: Inside Y Combinator - book review]]></title>
    <link href="http://AnthonyAkentiev.github.io/blog/2013/12/15/the-launch-pad-book-review/"/>
    <updated>2013-12-15T23:47:00+04:00</updated>
    <id>http://AnthonyAkentiev.github.io/blog/2013/12/15/the-launch-pad-book-review</id>
    <content type="html"><![CDATA[<p>Book &ldquo;The Launch Pad: Inside Y Combinator, Silicon Valley&rsquo;s Most Exclusive School for Startups&rdquo; is written by Randall Stross. Here is the <a href="http://www.amazon.com/Launch-Pad-Combinator-Exclusive-Startups-ebook/dp/B00AFLLS3W">link</a>.</p>

<p><img src="http://ecx.images-amazon.com/images/I/51a4sOz2THL._SY344_PJlook-inside-v2,TopRight,1,0_SH20_BO1,204,203,200_.jpg" alt="" /></p>

<h3>How to tell STARTUP from BUSINESS (even big)?</h3>

<p>Stross has good clear view of what &ldquo;startup&rdquo; means today: yes, it is only about fast pace and scalability. Everything that is not fast and scalable is ORDINARY BUSINESS. Kawasaki-Ries-Blank have said that many times.</p>

<p><em>Do you think Microsoft was a STARTUP in 80th?</em></p>

<p>The other interesting thought for me is probably about &ldquo;young means free&rdquo;. Author explains it in that way: we like youngsters not because they are smart and quick, but because they have no families and mortgages ))</p>

<h3>Quotes</h3>

<p><strong>On high stress in startups</strong></p>

<p>&ldquo;Stress levels on our families were uncomfortably high &ndash; not something we&rsquo;d like to repeat&rdquo;</p>

<p>&ldquo;She says she was glad that she had not enjoyed a higher standard of living before coming to YC &ndash; it would have been harder to give up. We are giving up cafeteria food for ramen&hellip;&rdquo;</p>

<p>&ldquo;Is this how you want to spend the next 10 years?&rdquo;</p>

<p><strong>On women in startups</strong></p>

<p>&ldquo;Only 1.7 percent of venture capital-backed startups were founded by women&rdquo;</p>

<p>&ldquo;Y combinator founded only 14 female founders to date&hellip;&rdquo; (2010)</p>

<p>&ldquo;There had been only 1 instance in which there had been an all-female team, a pair of cofounders&rdquo;</p>

<p>&ldquo;So she asked women in Berkeley&rsquo;s computer science department what toys they had played with as children &ndash; and whether Barbies were among them &ndash; and the answers she received were consistent: no Barbies. Legos were favorite toy&rdquo;</p>

<p><strong>Misc</strong></p>

<p>&ldquo;Some say Europeans are less energetic, but i don&rsquo;t believe it. I think the problem with Europe is not that they lack balls, but that they lack examples&hellip;&rdquo;</p>

<p>&ldquo;The way to get really big returns is to do things that seem crazy &ndash; like starting a new search engine in 1998 or turning down a billion-dollar acquisition offer&rdquo;</p>

<p>&ldquo;There&rsquo;s so much luck involved with startups [that] you increase your odds of success by swinging the bat multiple times&hellip;&rdquo;</p>

<p>&ldquo;The cadence of startup life is speeding up considerably&hellip;&rdquo;</p>

<h3>Conslusion</h3>

<p>I&rsquo;d give it 3+ out of 5 starts. I wanted to like this book, but there is not much new to me in it. Still, 3+ stars means that book is worth reading.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[What if C# became open-source?]]></title>
    <link href="http://AnthonyAkentiev.github.io/blog/2013/12/08/what-if-see-sharp-become-open-source/"/>
    <updated>2013-12-08T01:26:00+04:00</updated>
    <id>http://AnthonyAkentiev.github.io/blog/2013/12/08/what-if-see-sharp-become-open-source</id>
    <content type="html"><![CDATA[<p>What if?</p>

<p>What if Microsoft allowed us to use C#/.NET on all platforms back in 2000s (or today)?
Look at Objective-C or Java &ndash; they all <strong>suck</strong> compared to C#. Java is really way behind See-Sharp.</p>

<p>What if they OPEN-SOURCE their platform and open all the code: Virtual machine, frameworks, etc?
Of course i am aware of Mono project )). It is a great product, but we want even more &ndash; we want support, we want freedom, we want C# on every platform (including mobile), we want that really neat language/framework to be everywhere.</p>

<p><img src="http://cdn.memegenerator.net/instances/500x/34914954.jpg" title="C# meme" alt="C# meme" /></p>

<p>I found that quote:</p>

<blockquote><p>Android chief Andy Rubin wrote in a 2005 email, “If Sun doesn’t want to work with us, we have two options: 1) Abandon our work and adopt MSFT CLR VM and C# language – or – 2) Do Java anyway and defend our decision, perhaps making enemies along the way.</p></blockquote>

<p>Imagine how different the world would be today if Google had chosen .NET instead of Java as the native development framework for the Android mobile operating system…</p>

<p>Microsoft still has this opportunity. They understand that Excel/Office/Windows domination will not last for next 10 years. Customers need cloud solutions (SkyDrive, Azure), need virtualization solutions (Hyper-V)… That is a good tries by Microsoft management. Microsoft has all powers to drive developement. They can become some kind of &lsquo;backend&rsquo; technology provider all devs will use.</p>

<p>Look into feature MS! Time is going on and passing you by.
<strong>Why not do C# next Basic?</strong></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[On iOS 7 stability]]></title>
    <link href="http://AnthonyAkentiev.github.io/blog/2013/12/03/on-ios-7-stability/"/>
    <updated>2013-12-03T01:09:00+04:00</updated>
    <id>http://AnthonyAkentiev.github.io/blog/2013/12/03/on-ios-7-stability</id>
    <content type="html"><![CDATA[<p>I&rsquo;ve got 15 minutes before going to sleep and i&rsquo;d like to dedicate this time to discussing iOS7 (in)stability.
I owned many Apple products but none of them were so instable like iOS7 does.</p>

<p>I asked 5 friends/collegues of mine: 3 admitted that iOS7 is &ldquo;slow&rdquo;,&ldquo;crashes&rdquo; and &ldquo;not as stable as 6th was&rdquo;, 2 sayed it is &ldquo;ok&rdquo;.
Really, upgrading to 6th version went smooth. As far as i remember &ndash; the only issue it had was &ndash; it ate a lot of battery. That was the first Apple&rsquo;s step towards Android).</p>

<p>I like iOS7 design, i really like it.
I use my iPod 95% of time as a music/audiobook player &ndash; and i want 100% stability in these use cases. But my iPod does well everything but that!</p>

<p>Now i am listening to
<img src="http://img1.fantasticfiction.co.uk/images/n0/n708.jpg" title="Stephen King, The Eyes Of The Dragon" alt="Stephen King, The Eyes Of The Dragon" /></p>

<ul>
<li>Music player crashes every day. I loose my position (not a name of song))) and it is very difficult to find it again in 10+h audiobooks.</li>
<li>Music clicks when LockScreen is unlocked. Ahhhhh, crap.</li>
<li>I just can&rsquo;t find position with my finger! The slider is way TOO small&hellip; Shit. Seems like i&rsquo;m getting used to big Samsung screens.</li>
<li>Position is saved incorrectly if i pause and then start again. It is always minus 30-40 seconds late.</li>
<li>Music player cant restore position in 50% of tries.</li>
<li>Sometimes position freezes. I&rsquo;m jumping back to 14:55 and then again and again. Oh, maybe Jobs invented some kind of neat DJ feature? But it really annoys me.</li>
<li>The interface is SOO slow! Samdroid is very-very fast when compared. By the way, i own iPod 5! Not that old and slow 4th gen.device&hellip;</li>
</ul>


<p>Oh, Apple. Please do 64bit processing, do fingerprint recognition&hellip; But FIRST OF ALL &ndash; do fix that fucking iOS7.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[BDD over TDD]]></title>
    <link href="http://AnthonyAkentiev.github.io/blog/2013/11/28/bdd-over-tdd/"/>
    <updated>2013-11-28T01:02:00+04:00</updated>
    <id>http://AnthonyAkentiev.github.io/blog/2013/11/28/bdd-over-tdd</id>
    <content type="html"><![CDATA[<p>Today i&rsquo;m going to talk a little bit about unit-tests. First rule of any programmer &ndash; &ldquo;no tests, no product&rdquo;. Unfortunately, i got used to it too late)) Of course there are always some exceptions to that rule, but in 95% of today tasks it is mandatory.</p>

<p>Best unit-tests in my opionion are:</p>

<ol>
<li>Written by &ldquo;non-techincal&rdquo; people, like your Client, your Tester, your Grandma.
<em>Yes, i can tell integration test from unit-test. The statement above is still correct for UNIT-tests too!</em></li>
<li>Written before coding is done.</li>
<li>Small.</li>
<li>Fast: Asynchronous. Have no side-effects.</li>
<li>Easy-to write and to read.</li>
</ol>


<p>Since i have been using Node.js and decided to implement my real-world backend server using this techology, i really loved BDD style-tests.
BDD is a little different from TDD, you can read about it somewhere else <del>over the rainbow</del> in the internet. But mostly i like it because test descriptions are self-explanatory.</p>

<p>As an example&hellip;here is the result of running <strong>wovs</strong> testing-tool for <strong>forever</strong> library:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>♢ forever/core/tail 
</span><span class='line'>
</span><span class='line'>When using forever the tail() method
</span><span class='line'>     ✓ should respond with logs for the script
</span><span class='line'>When the tests are over stop all forever processes
</span><span class='line'>     ✓ should stop the correct number of procs
</span><span class='line'>
</span><span class='line'>♢ forever/service/simple 
</span><span class='line'>
</span><span class='line'>When using forever the service module
</span><span class='line'>     ✓ should have the correct exports
</span><span class='line'>
</span><span class='line'>♢ forever/workers/multiple 
</span><span class='line'>
</span><span class='line'>When using forever and spawning two processes using the same script
</span><span class='line'>     ✓ should respond with no error
</span><span class='line'>When using forever and spawning two processes using the same script requests against the second child
</span><span class='line'>     ✓ should respond with i know nodejitsu
</span><span class='line'>     ✓ stop the child process
</span><span class='line'>When using forever and spawning two processes using the same script requests against the first child
</span><span class='line'>     ✓ should respond with i know nodejitsu
</span><span class='line'>     ✓ stop the child process
</span><span class='line'>Once the stop attempt has been made
</span><span class='line'>     ✓ the processes should be dead
</span><span class='line'>...</span></code></pre></td></tr></table></div></figure>


<p>Do you see these small checks? They mean all tests have passed. How cool that we have human-readable descriptions!
Next is few lines of <strong>mocha</strong> output for my backend server:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Code processing module
</span><span class='line'>     removeWhitespaces
</span><span class='line'>          ✓ should remove whitespaces 
</span><span class='line'>     substituteCode
</span><span class='line'>          ✓ should change code 
</span><span class='line'>     isJsonOk
</span><span class='line'>          ✓ should check received JSON 
</span><span class='line'>          ✓ should check for error 
</span><span class='line'>          ✓ should handle empty err and throw 
</span><span class='line'>     changeTransactionId
</span><span class='line'>          ✓ should throw error if Request-New not found 
</span><span class='line'>          ✓ should change ID 
</span><span class='line'>     makeResponseJson
</span><span class='line'>          ✓ should fill all fields 
</span><span class='line'>          ✓ should throw if no Request-New found 
</span><span class='line'>          ✓ should throw if empty string is passed 
</span><span class='line'>          ✓ should throw if same subst is found 
</span><span class='line'>     makeId
</span><span class='line'>          ✓ should make ID of required length 
</span><span class='line'>     ...</span></code></pre></td></tr></table></div></figure>


<p>Tests are written like this:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="nx">describe</span><span class="p">(</span><span class="s1">&#39;Code processing module&#39;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>     <span class="nx">describe</span><span class="p">(</span><span class="s1">&#39;removeWhitespaces&#39;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>          <span class="nx">it</span><span class="p">(</span><span class="s1">&#39;should remove whitespaces&#39;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>               <span class="kd">var</span> <span class="nx">before</span> <span class="o">=</span> <span class="s1">&#39;hello world&#39;</span><span class="p">;</span>
</span><span class='line'>               <span class="kd">var</span> <span class="nx">mustBe</span> <span class="o">=</span> <span class="s1">&#39;helloworld&#39;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>               <span class="kd">var</span> <span class="nx">out</span> <span class="o">=</span> <span class="nx">myLib</span><span class="p">.</span><span class="nx">removeWhitespaces</span><span class="p">(</span><span class="nx">before</span><span class="p">);</span>
</span><span class='line'>               <span class="nx">assert</span><span class="p">.</span><span class="nx">equal</span><span class="p">(</span><span class="nx">mustBe</span><span class="p">,</span><span class="nx">out</span><span class="p">);</span>
</span><span class='line'>          <span class="p">})</span>
</span><span class='line'>     <span class="p">})</span>
</span><span class='line'>
</span><span class='line'>     <span class="nx">describe</span><span class="p">(</span><span class="s1">&#39;substituteCode&#39;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>          <span class="nx">it</span><span class="p">(</span><span class="s1">&#39;should change code&#39;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">done</span><span class="p">){</span>
</span><span class='line'>               <span class="kd">var</span> <span class="nx">template</span> <span class="o">=</span> <span class="s1">&#39;json/code_request.json.utf8&#39;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>               <span class="nx">fs</span><span class="p">.</span><span class="nx">readFile</span><span class="p">(</span><span class="nx">template</span><span class="p">,</span> <span class="s1">&#39;utf8&#39;</span><span class="p">,</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">err</span><span class="p">,</span> <span class="nx">data</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                    <span class="kd">var</span> <span class="nx">changeTo</span> <span class="o">=</span> <span class="s1">&#39;AAAAAAABBBBBBBC&#39;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>                    <span class="nx">assert</span><span class="p">.</span><span class="nx">equal</span><span class="p">(</span><span class="mi">15</span><span class="p">,</span><span class="nx">changeTo</span><span class="p">.</span><span class="nx">length</span><span class="p">);</span>
</span><span class='line'>                    <span class="kd">var</span> <span class="nx">index</span> <span class="o">=</span> <span class="nx">data</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">changeTo</span><span class="p">);</span>
</span><span class='line'>                    <span class="nx">assert</span><span class="p">.</span><span class="nx">equal</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="nx">index</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>                    <span class="kd">var</span> <span class="nx">out</span> <span class="o">=</span> <span class="nx">myLib</span><span class="p">.</span><span class="nx">substituteCode</span><span class="p">(</span><span class="nx">data</span><span class="p">,</span><span class="nx">changeTo</span><span class="p">);</span>
</span><span class='line'>                    <span class="kd">var</span> <span class="nx">index</span> <span class="o">=</span> <span class="nx">out</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">changeTo</span><span class="p">);</span>
</span><span class='line'>                    <span class="nx">assert</span><span class="p">.</span><span class="nx">notEqual</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="nx">index</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>                    <span class="nx">done</span><span class="p">();</span>
</span><span class='line'>               <span class="p">})</span>
</span><span class='line'>          <span class="p">})</span>
</span><span class='line'>
</span><span class='line'>          <span class="nx">it</span><span class="p">(</span><span class="s1">&#39;should do something cool...&#39;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>               <span class="c1">// TODO: do something cool</span>
</span><span class='line'>               <span class="c1">// TODO: assert that it is really cool!</span>
</span><span class='line'>          <span class="p">})</span>
</span><span class='line'>
</span><span class='line'>          <span class="p">...</span>
</span><span class='line'>     <span class="p">})</span>
</span><span class='line'>
</span><span class='line'>     <span class="p">...</span>
</span><span class='line'><span class="p">})</span>
</span></code></pre></td></tr></table></div></figure>


<p>I really recommend <strong>mocha</strong> framework for Node.js developement. Simpy run it like this:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>mocha --reporter spec
</span></code></pre></td></tr></table></div></figure>


<p>I played with <strong>vows</strong>, <strong>expresso</strong> and <strong>mocha</strong>.
Mocha is really the best of all (i pronounce it like &lsquo;mokka&rsquo;).</p>

<p>Remember: each test saves one whale. Cheers!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How you'd design this system (pt.1)?]]></title>
    <link href="http://AnthonyAkentiev.github.io/blog/2013/11/23/how-youd-design-this-system/"/>
    <updated>2013-11-23T00:40:00+04:00</updated>
    <id>http://AnthonyAkentiev.github.io/blog/2013/11/23/how-youd-design-this-system</id>
    <content type="html"><![CDATA[<p>I met one of my friends today. We&rsquo;ve been discussing (for about 2 hours) web processing system he has designed. I am going to show you (and him) my vision of that product and a little bit of real working code. Of course, i am not aware of all requirements and constraints (he-he), so that is just a sketch.</p>

<h2>Reqs:</h2>

<ol>
<li>System MUST provide API that can be accessed remotely.</li>
<li>System MUST control millions of computers in the CLOUD.</li>
<li>System MUST control servers using IPMI interface.</li>
<li>System MUST be &ldquo;secure&rdquo;.</li>
<li>System MUST monitor servers and collect statistics (kpi, load avg. etc)</li>
<li>System MAY be scalable.</li>
<li>System MUST have sophisticated tools for data monitoring:

<ul>
<li>It should allow us to &ldquo;monitor node15 and collect load avg if temperature exceeds 15 degrees&rdquo;.</li>
<li>It should allow us to &ldquo;switch node92 off when load avg. exceeds 80% over 1 hour&rdquo;.</li>
<li>It should allow us to &ldquo;alert if node41 is not responding&rdquo;.</li>
</ul>
</li>
</ol>


<h3>Simplifying: we are developing some kind of &lsquo;watching&rsquo; application that collects data and applies actions if needed.</h3>

<p>How i see that system:</p>

<ol>
<li>Watcher daemon: must collect data into Core, apply actions (IPMI) and pull tasks from Core.</li>
<li>Core: must collect data and provide Watcher with tasks.</li>
<li>Frontend Servers (let me call them like that): must process request from Clients and put them into Core.</li>
<li>Clients: have to be able to send commands and receive response to Frontend Servers.</li>
<li>High-privileged clients: admins.</li>
</ol>


<h2>Core</h2>

<p>Contains 2 key components: DB and QUEUE.
DB can be NoSQL if we can lessen some ACID requirements and want speed (and ease of use) over functionality. Read about &lsquo;relaxed consistency&rsquo;.<br/>
I will write a post about that later.</p>

<p>Some folks simply do &ldquo;always say NoSQL if have no opinion&rdquo; and don&rsquo;t understand key NoSQL features. Pure RDBMS (SQL, PostgreSQL …) is needed when you want transactions + complicated queries and so on. NoSQL is always simpler under the hood because it is more like traditional FileSystem (documents) and are easy to use.</p>

<p>The best article i&rsquo;ve ever seen on that topic is <a href="http://blog.nahurst.com/visual-guide-to-nosql-systems">here</a>:</p>

<blockquote><p>One of the primary goals of NoSQL systems is to bolster horizontal scalability. To scale horizontally, you need strong network partition tolerance which requires giving up either consistency or availability. NoSQL systems typically accomplish this by relaxing relational abilities and/or loosening transactional semantic.</p></blockquote>

<p>QUEUE (RabbitMQ, ZeroMQ …) provides us with fast &ldquo;collect tasks&rdquo; and &ldquo;get tasks&rdquo; features. Usually queues are implemented in C++ and allocates a lot of memory. So if your Core will be powered down or will crash &ndash;> all information will be lost.
If we need 100% guarantee that no information will be lost &ndash; we should use SQL DB (see above) and keep all task in single DB instead of queue.</p>

<h3>FRONTEND is a stateless RESTful HTTPS server.</h3>

<ul>
<li><p>Stateless means it keeps no data. Stateless is crucial for us. No one knows which server client will use next second. It is possible to
add balancer in front of multiple HTTP(S) servers or do Round-Robin DNS:
<img src="http://support.novell.com/techcenter/articles/img/ana2000050206.gif"></p></li>
<li><p>REST-ful means that all requests can be sent using standard GET/POST request. All URLS are nouns, not verbs:</p></li>
</ul>


<p>Example:</p>

<pre><code> https://my.com/servers/134/temperature_detectors/65  
</code></pre>

<p>It is not a good idea to use such URL style (with verbs):</p>

<pre><code> https://my.com/set-server-temp?id=134&amp;temperature=65
</code></pre>

<p>See great article on URL naming <a href="http://apigee.com/about/content/web-api-design">here</a></p>

<ul>
<li>HTTPS means we can authenticate client (using client-side certificate). And this is done automatically.
The certificate can be self-signed or issued by CerticiationAuthority (Verisign, Thawte&hellip;).</li>
</ul>


<p><strong>To be continued…</strong></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Three Objective-C syntatic sugar features i like]]></title>
    <link href="http://AnthonyAkentiev.github.io/blog/2013/11/21/objective-c-syntatic-sugar-i-like/"/>
    <updated>2013-11-21T01:34:00+04:00</updated>
    <id>http://AnthonyAkentiev.github.io/blog/2013/11/21/objective-c-syntatic-sugar-i-like</id>
    <content type="html"><![CDATA[<p>Let me start by saying that i really hate Objective-C and all that &lsquo;old-C-preprocessor&rsquo; stuff Apple feeds us in 21st century.
But i hate C++ even more, because i use it more often )) Simple as that.</p>

<p>Fortunately, there are some features i really DO like in Objective-C. Let me show you 3 of them:</p>

<h2>Method names are awesome</h2>

<p>Get used to this style and you&rsquo;ll want C++ to be more &lsquo;Objective&rsquo;. For example, this is the good Objective-C method name:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="k">-</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">downloadInfoAboutUser:</span><span class="p">(</span><span class="n">NSString</span><span class="o">*</span><span class="p">)</span><span class="nv">code</span>
</span><span class='line'>                  <span class="nf">withTarget:</span><span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="nv">target</span>
</span><span class='line'>                 <span class="nf">andSelector:</span><span class="p">(</span><span class="kt">SEL</span><span class="p">)</span><span class="nv">callbackSelector</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>or this:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="k">-</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">setImage:</span><span class="p">(</span><span class="n">UIImage</span><span class="o">*</span><span class="p">)</span><span class="nv">image</span>
</span><span class='line'>         <span class="nf">toCell:</span><span class="p">(</span><span class="n">UITableViewCell</span><span class="o">*</span><span class="p">)</span><span class="nv">cell</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>NOT this:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="k">-</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">setImageToCell:</span><span class="p">(</span><span class="n">UIImage</span><span class="o">*</span><span class="p">)</span><span class="nv">anImage</span>
</span><span class='line'>                 <span class="nf">cell:</span><span class="p">(</span><span class="n">UITableViewCell</span><span class="o">*</span><span class="p">)</span><span class="nv">aCell</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Private means PRIVATE</h2>

<p>I really like that <strong>private</strong> methods are <strong>REALLY</strong> private and are not <strong>visible</strong> in .h file.
Example of .h file for class MainTabBarController goes here:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="k">@interface</span> <span class="nc">MainTabBarController</span> : <span class="nc">UITabBarController</span><span class="o">&lt;</span><span class="n">UITabBarControllerDelegate</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>


<p>It seems like this class has no public methods client can use? Yeah, that is what i want C++ to be like.
If you need some private properties or private methods &ndash; simply declare them in your .m file. Piece of cake.</p>

<h2>No hate for categories</h2>

<p>Categories are really useful syntatic sugar. See this:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="k">@interface</span> <span class="nc">NSString</span> <span class="p">(</span> <span class="n">containsCategory</span> <span class="p">)</span>
</span><span class='line'>     <span class="o">-</span><span class="p">(</span><span class="kt">BOOL</span><span class="p">)</span><span class="nl">isContainsString:</span> <span class="p">(</span><span class="n">NSString</span><span class="o">*</span><span class="p">)</span> <span class="n">substring</span><span class="p">;</span>
</span><span class='line'><span class="k">@end</span>
</span><span class='line'>
</span><span class='line'><span class="k">@implementation</span> <span class="nc">NSString</span> <span class="p">(</span> <span class="n">containsCategory</span> <span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="o">-</span> <span class="p">(</span><span class="kt">BOOL</span><span class="p">)</span> <span class="nl">isContainsString:</span> <span class="p">(</span><span class="n">NSString</span><span class="o">*</span><span class="p">)</span> <span class="n">substring</span> <span class="p">{</span>
</span><span class='line'>     <span class="n">NSRange</span> <span class="n">range</span> <span class="o">=</span> <span class="p">[</span><span class="n">self</span> <span class="n">rangeOfString</span> <span class="o">:</span> <span class="n">substring</span><span class="p">];</span>
</span><span class='line'>     <span class="kt">BOOL</span> <span class="n">found</span> <span class="o">=</span> <span class="p">(</span> <span class="n">range</span><span class="p">.</span><span class="n">location</span> <span class="o">!=</span> <span class="n">NSNotFound</span> <span class="p">);</span>
</span><span class='line'>     <span class="k">return</span> <span class="n">found</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>


<p>After declaring that &ndash; you don&rsquo;t need any inheritance or whatever&hellip; Simply use your NSString-s with new method:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">NSString</span><span class="o">*</span> <span class="n">imageName</span> <span class="o">=</span> <span class="s">@&quot;blah-blah-blah&quot;</span><span class="p">;</span>
</span><span class='line'><span class="kt">BOOL</span> <span class="n">isPng</span> <span class="o">=</span> <span class="p">[</span><span class="n">imageName</span> <span class="nl">isContainsString:</span><span class="s">@&quot;.png&quot;</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>


<p>Thanks for watching. To be continued&hellip;</p>
]]></content>
  </entry>
  
</feed>
